But on the most simple level you just rescale your window (either by draging the window bigger, entering full screen or having a settings option for the resolution).

Don't forget to have 2 surfaces:

screen ---> the actual display on which the game_canvas gets blitted and then gets rescaled to fit the Window resolution.

screen = pygame.display.set\_mode((width, height), pygame.RESIZABLE)
game_cavas ---> where you draw everything on.

game_canvas = pygame.Surface((width, height))
Once you rescaled the window you need to get the screen resolution by:

size = pygame.display.get_surface().get_size()
EDIT: If you have errors with your screen size actually updating, do this (not sure rn if u rly need this with the RESIZABLE flag tho):

screen = pygame.display.set\_mode(size, pygame.RESIZABLE)
On every tick we rescale game_canvas and blit it on screen:

screen.blit(pygame.transform.scale(game_canvas, size), (0, 0))
finally we update our display:

pygame.display.flip()
This works only for the same aspect ratio. If the aspect Ratio of your window changes the game_canvas gets smushed.






It's quite complex when you want to get perfect screen resolution and aspect ratio. If you're interested here are some things to consider:

Remember to disable windows's custom UI scaling.
Code from one of my Projects:

  def set_dpi_awareness():
  if platform.system() == "Windows":
      # Query DPI Awareness (Windows 10 and 8)
      awareness = ctypes.c_int()
      errorCode = ctypes.windll.shcore.GetProcessDpiAwareness(0, ctypes.byref(awareness))

      if awareness.value == 0 or awareness.value == 1:
          release = platform.release()
          if release == "11" or release == "10" or release == "8":
              # Set DPI Awareness  (Windows 10 and 8)
              errorCode = ctypes.windll.shcore.SetProcessDpiAwareness(2)
              # the argument is the awareness level, which can be 0, 1 or 2:
              # for 1-to-1 pixel control I seem to need it to be non-zero
          elif release == "7" or release == "Vista":
              # Set DPI Awareness  (Windows 7 and Vista)
              success = ctypes.windll.user32.SetProcessDPIAware()
You must calculate every menu to make it suitable for more than one aspect ratio.By this i mean the elements need to be drawn with relative coordinates rather than absolute.

My approach to aspect ratio in game, is to have a camera which just shows more information horizontaly or verticaly depending on the aspect ratio.

Another and simpler approach would be to have black bars.

